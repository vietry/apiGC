generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("SQLSERVER_URL")
}

model Foto {
  id              Int               @id(map: "PK__Foto__3213E83F5E33F532") @default(autoincrement())
  nombre          String            @db.VarChar(50)
  tipo            String?           @db.VarChar(10)
  createdAt       DateTime?         @db.DateTime
  updatedAt       DateTime?         @db.DateTime
  ruta            String?           @db.VarChar(100)
  extension       String?           @db.VarChar(5)
  Usuario         Usuario[]
  Variedad        Variedad[]
  VisitaGteTienda VisitaGteTienda[]
}

model Usuario {
  id                                                     Int                 @id(map: "PK__Usuario__3213E83FD8E5D762") @default(autoincrement())
  nombres                                                String              @db.VarChar(45)
  apellidos                                              String?             @db.VarChar(45)
  email                                                  String              @db.VarChar(40)
  emailValidado                                          Boolean?
  password                                               String              @db.VarChar(255)
  rol                                                    String?             @db.VarChar(20)
  celular                                                String?             @db.VarChar(15)
  idFoto                                                 Int?
  createdAt                                              DateTime?           @db.DateTime
  updatedAt                                              DateTime?           @db.DateTime
  Asistencia_Asistencia_createdByToUsuario               Asistencia[]        @relation("Asistencia_createdByToUsuario")
  Asistencia_Asistencia_updatedByToUsuario               Asistencia[]        @relation("Asistencia_updatedByToUsuario")
  Charla_Charla_createdByToUsuario                       Charla[]            @relation("Charla_createdByToUsuario")
  Charla_Charla_updatedByToUsuario                       Charla[]            @relation("Charla_updatedByToUsuario")
  Colaborador                                            Colaborador[]
  ConsumoMuestras_ConsumoMuestras_createdByToUsuario     ConsumoMuestras[]   @relation("ConsumoMuestras_createdByToUsuario")
  ConsumoMuestras_ConsumoMuestras_updatedByToUsuario     ConsumoMuestras[]   @relation("ConsumoMuestras_updatedByToUsuario")
  CostoLaboral_CostoLaboral_createdByToUsuario           CostoLaboral[]      @relation("CostoLaboral_createdByToUsuario")
  CostoLaboral_CostoLaboral_updatedByToUsuario           CostoLaboral[]      @relation("CostoLaboral_updatedByToUsuario")
  DemoPlot_DemoPlot_createdByToUsuario                   DemoPlot[]          @relation("DemoPlot_createdByToUsuario")
  DemoPlot_DemoPlot_updatedByToUsuario                   DemoPlot[]          @relation("DemoPlot_updatedByToUsuario")
  EntregaMuestras_EntregaMuestras_createdByToUsuario     EntregaMuestras[]   @relation("EntregaMuestras_createdByToUsuario")
  EntregaMuestras_EntregaMuestras_updatedByToUsuario     EntregaMuestras[]   @relation("EntregaMuestras_updatedByToUsuario")
  Externo                                                Externo[]
  FotoCharla_FotoCharla_createdByToUsuario               FotoCharla[]        @relation("FotoCharla_createdByToUsuario")
  FotoCharla_FotoCharla_updatedByToUsuario               FotoCharla[]        @relation("FotoCharla_updatedByToUsuario")
  FotoDemoPlot_FotoDemoPlot_createdByToUsuario           FotoDemoPlot[]      @relation("FotoDemoPlot_createdByToUsuario")
  FotoDemoPlot_FotoDemoPlot_updatedByToUsuario           FotoDemoPlot[]      @relation("FotoDemoPlot_updatedByToUsuario")
  FotoDemoPlotLog                                        FotoDemoPlotLog[]
  FotoVisita_FotoVisita_createdByToUsuario               FotoVisita[]        @relation("FotoVisita_createdByToUsuario")
  FotoVisita_FotoVisita_updatedByToUsuario               FotoVisita[]        @relation("FotoVisita_updatedByToUsuario")
  Gte                                                    Gte[]
  RegistroLaboralGD_RegistroLaboralGD_createdByToUsuario RegistroLaboralGD[] @relation("RegistroLaboralGD_createdByToUsuario")
  RegistroLaboralGD_RegistroLaboralGD_updatedByToUsuario RegistroLaboralGD[] @relation("RegistroLaboralGD_updatedByToUsuario")
  Foto                                                   Foto?               @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuario_Foto")
  VariablePersonal_VariablePersonal_createdByToUsuario   VariablePersonal[]  @relation("VariablePersonal_createdByToUsuario")
  VariablePersonal_VariablePersonal_updatedByToUsuario   VariablePersonal[]  @relation("VariablePersonal_updatedByToUsuario")
}

model Area {
  id          Int           @id(map: "PK__Area__3213E83F02D8CB90") @default(autoincrement())
  nombre      String        @db.VarChar(20)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  Colaborador Colaborador[]
}

model Articulo {
  id          Int       @id(map: "PK__Articulo__3213E83FF440143E") @default(autoincrement())
  codigo      String    @db.VarChar(10)
  nombre      String    @db.VarChar(90)
  present     Decimal?  @db.Decimal(8, 3)
  codFamilia  String?   @db.VarChar(8)
  codClase    String?   @db.VarChar(6)
  codLinea    String?   @db.VarChar(6)
  codDivision String?   @db.VarChar(6)
  idFamilia   Int?
  idClase     Int?
  idLinea     Int?
  idDivision  Int?
  idEmpresa   Int
  createdAt   DateTime? @db.DateTime
  updatedAt   DateTime? @db.DateTime
  activo      Boolean?
  Clase       Clase?    @relation(fields: [idClase], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Clase1")
  Division    Division? @relation(fields: [idDivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Division1")
  Empresa     Empresa   @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fkArticulo_Empresa1")
  Familia     Familia?  @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Familia1")
  Linea       Linea?    @relation(fields: [idLinea], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Linea1")
}

model Clase {
  id        Int        @id(map: "PK__Clase__3213E83F22B49E40")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Clase1")
}

model Cliente {
  id             Int              @id(map: "PK__Cliente__3213E83F7EB86726") @default(autoincrement())
  codigo         String           @db.VarChar(20)
  nombre         String           @db.VarChar(90)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  codGrupo       String?          @db.VarChar(20)
  enfoque        Boolean?
  idEmpresa      Int?
  Empresa        Empresa?         @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Cliente_Empresa")
  ClienteUbigeo  ClienteUbigeo[]
  ClienteZonaAnt ClienteZonaAnt[]
}

model ClienteUbigeo {
  id         Int       @id(map: "PK__ClienteU__3213E83F58A750CC") @default(autoincrement())
  idCliente  Int
  idDistrito String    @db.VarChar(6)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Cliente    Cliente   @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Cliente")
  Distrito   Distrito  @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Distrito")
  Fundo      Fundo[]
}

model ClienteZonaAnt {
  id           Int          @id(map: "PK__ClienteZ__3213E83FB2C5C43B") @default(autoincrement())
  idEmpresa    Int
  idCliente    Int
  codCliente   String       @db.VarChar(20)
  idZonaAnt    Int
  codZona      String       @db.VarChar(4)
  createdAt    DateTime?    @db.DateTime
  updatedAt    DateTime?    @db.DateTime
  Cliente      Cliente      @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Cliente")
  Empresa      Empresa      @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Empresa")
  ZonaAnterior ZonaAnterior @relation(fields: [idZonaAnt], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_ZonaA")
}

model Colaborador {
  id                                                         Int                  @id(map: "PK__Colabora__3213E83F3F6FEE5F") @default(autoincrement())
  cargo                                                      String?              @db.VarChar(45)
  idArea                                                     Int
  idZonaAnt                                                  Int?
  idUsuario                                                  Int?
  createdAt                                                  DateTime?            @db.DateTime
  updatedAt                                                  DateTime?            @db.DateTime
  negocio                                                    String?              @db.VarChar(25)
  ClienteVendedorGC_ClienteVendedorGC_createdByToColaborador ClienteVendedorGC[]  @relation("ClienteVendedorGC_createdByToColaborador")
  ClienteVendedorGC_ClienteVendedorGC_updatedByToColaborador ClienteVendedorGC[]  @relation("ClienteVendedorGC_updatedByToColaborador")
  Usuario                                                    Usuario?             @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Colaborador_Usuario1")
  ZonaAnterior                                               ZonaAnterior?        @relation(fields: [idZonaAnt], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Colaborador_Zona1")
  Area                                                       Area                 @relation(fields: [idArea], references: [id], onUpdate: NoAction, map: "fk_ColaboradorArea")
  ColaboradorJefe_ColaboradorJefe_idColaboradorToColaborador ColaboradorJefe[]    @relation("ColaboradorJefe_idColaboradorToColaborador")
  ColaboradorJefe_ColaboradorJefe_idJefeToColaborador        ColaboradorJefe[]    @relation("ColaboradorJefe_idJefeToColaborador")
  Contacto                                                   Contacto[]
  ExternoColaborador                                         ExternoColaborador[]
  Gte                                                        Gte[]
  NuevaPlanificacion                                         NuevaPlanificacion[]
  Planificacion                                              Planificacion[]
  PuntoContacto                                              PuntoContacto[]
  TiendaCliente                                              TiendaCliente[]
  Visita                                                     Visita[]
}

model Contacto {
  id                     Int                    @id(map: "PK__Contacto__3213E83F32EEC6B3") @default(autoincrement())
  nombre                 String                 @db.VarChar(45)
  apellido               String                 @db.VarChar(45)
  cargo                  String                 @db.VarChar(45)
  email                  String?                @db.VarChar(50)
  celularA               String?                @db.VarChar(20)
  celularB               String?                @db.VarChar(20)
  activo                 Boolean                @default(true, map: "DF__Contacto__idClie__65570293")
  createdAt              DateTime               @default(dbgenerated("sysutcdatetime()"), map: "DF__Contacto__create__636EBA21")
  updatedAt              DateTime               @default(dbgenerated("sysutcdatetime()"), map: "DF__Contacto__update__6462DE5A")
  clienteExactusId       Int
  clienteGestionCId      Int
  tipo                   String?                @db.VarChar(20)
  createdBy              Int?
  ClienteVendedorExactus ClienteVendedorExactus @relation(fields: [clienteExactusId], references: [id], onUpdate: NoAction, map: "Contacto_ClienteExactus")
  ClienteVendedorGC      ClienteVendedorGC      @relation(fields: [clienteGestionCId], references: [id], onUpdate: NoAction, map: "Contacto_ClienteGestionC")
  Colaborador            Colaborador?           @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Contacto_CreatedByColaborador")
}

model Cultivo {
  id            Int        @id(map: "PK__Cultivo__3213E83F4C6DDF3D") @default(autoincrement())
  certificacion String?    @db.VarChar(20)
  hectareas     Decimal?   @db.Decimal(6, 2)
  mesInicio     String?    @db.VarChar(20)
  mesFinal      String?    @db.VarChar(20)
  observacion   String?    @db.VarChar(255)
  idFundo       Int
  idVariedad    Int
  createdAt     DateTime?  @db.DateTime
  updatedAt     DateTime?  @db.DateTime
  centroPoblado String?    @db.VarChar(70)
  Fundo         Fundo      @relation(fields: [idFundo], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Fundo1")
  Variedad      Variedad   @relation(fields: [idVariedad], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Variedad1")
  DemoPlot      DemoPlot[]
  Visita        Visita[]
}

model Departamento {
  id        String      @id(map: "PK__Departam__3213E83F2E429D76") @db.VarChar(2)
  nombre    String      @unique(map: "UQ_nombre_Departamento") @db.VarChar(30)
  Provincia Provincia[]

  @@index([nombre], map: "idx_nombre_Departamento")
}

model Distrito {
  id             String          @id(map: "PK__Distrito__3213E83F67BAA8F6") @db.VarChar(6)
  nombre         String          @db.VarChar(40)
  idProvincia    String          @db.VarChar(4)
  idDepartamento String          @db.VarChar(2)
  Charla         Charla[]
  ClienteUbigeo  ClienteUbigeo[]
  DemoPlot       DemoPlot[]
  Provincia      Provincia       @relation(fields: [idProvincia], references: [id], onUpdate: NoAction, map: "FK_Distrito_Provincia")
  Fundo          Fundo[]
  PuntoContacto  PuntoContacto[]
}

model Division {
  id        Int        @id(map: "PK__Division__3213E83FFBF9B83C")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(30)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Division1")
  Negocio   Negocio[]
}

model Empresa {
  id                Int                 @id(map: "PK__Empresa__3213E83F9EE8C362")
  nomEmpresa        String              @db.VarChar(15)
  createdAt         DateTime?           @db.DateTime
  updatedAt         DateTime?           @db.DateTime
  Articulo          Articulo[]
  Clase             Clase[]
  Cliente           Cliente[]
  ClienteVendedorGC ClienteVendedorGC[]
  ClienteZona       ClienteZona[]
  ClienteZonaAnt    ClienteZonaAnt[]
  ColaboradorJefe   ColaboradorJefe[]
  Division          Division[]
  Familia           Familia[]
  Linea             Linea[]
  PuntoContacto     PuntoContacto[]
  ZonaAnterior      ZonaAnterior[]
}

model Familia {
  id                 Int                  @id(map: "PK__Familia__3213E83F108F037C") @default(autoincrement())
  codigo             String               @db.VarChar(7)
  nombre             String               @db.VarChar(60)
  idEmpresa          Int
  enfoque            Boolean?
  createdAt          DateTime?            @db.DateTime
  updatedAt          DateTime?            @db.DateTime
  escuela            Boolean?
  clase              String?              @db.VarChar(25)
  visitas            Boolean?
  Articulo           Articulo[]
  Charla             Charla[]
  CharlaProducto     CharlaProducto[]
  DemoPlot           DemoPlot[]
  EntregaMuestras    EntregaMuestras[]
  Empresa            Empresa              @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Familia1")
  NuevaPlanificacion NuevaPlanificacion[]
  VisitaGteTienda    VisitaGteTienda[]
  VisitaProducto     VisitaProducto[]

  @@index([clase], map: "IX_Familia_clase")
}

model Fundo {
  id              Int            @id(map: "PK__Fundo__3213E83F58D9DC08") @default(autoincrement())
  nombre          String?        @db.VarChar(45)
  idClienteUbigeo Int?
  createdAt       DateTime?      @db.DateTime
  updatedAt       DateTime?      @db.DateTime
  idPuntoUbigeo   Int?
  centroPoblado   String?        @db.VarChar(80)
  idDistrito      String?        @db.VarChar(6)
  idPuntoContacto Int?
  idContactoPunto Int?
  Cultivo         Cultivo[]
  ClienteUbigeo   ClienteUbigeo? @relation(fields: [idClienteUbigeo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_ClienteUbigeo")
  ContactoPunto   ContactoPunto? @relation(fields: [idContactoPunto], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_Fundo_ContactoPunto1")
  Distrito        Distrito?      @relation(fields: [idDistrito], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_Distrito1")
  PuntoContacto   PuntoContacto? @relation(fields: [idPuntoContacto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_PuntoContacto1")
  PuntoUbigeo     PuntoUbigeo?   @relation(fields: [idPuntoUbigeo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_PuntoUbigeo1")
}

model Labor {
  id        Int        @id(map: "PK__Labor__3213E83F08B820FC") @default(autoincrement())
  nombre    String     @db.VarChar(45)
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  SubLabor  SubLabor[]
}

model LaborVisita {
  id             Int           @id(map: "PK__LaborVis__3213E83F937987C6") @default(autoincrement())
  idVisita       Int
  idSubLabor     Int
  idRepresentada Int?
  createdAt      DateTime?     @db.DateTime
  updatedAt      DateTime?     @db.DateTime
  Representada   Representada? @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_LaborVisita_Representada")
  SubLabor       SubLabor      @relation(fields: [idSubLabor], references: [id], onUpdate: NoAction, map: "fk_LaborVisita_SubLabor")
  Visita         Visita        @relation(fields: [idVisita], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_LaborVisita_Visita1")
}

model Linea {
  id        Int        @id(map: "PK__Linea__3213E83F8A21CAFE")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Linea1")
}

model Negocio {
  id         Int       @id(map: "PK__Negocio__3213E83F7C05F944") @default(autoincrement())
  nombre     String    @db.VarChar(20)
  idDivision Int
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Division   Division  @relation(fields: [idDivision], references: [id], onUpdate: NoAction, map: "fk_Negocio_Division1")
}

model Provincia {
  id             String       @id(map: "PK__Provinci__3213E83FFA46C972") @db.VarChar(4)
  nombre         String       @unique(map: "UQ_nombre_Provincia") @db.VarChar(30)
  idDepartamento String       @db.VarChar(2)
  Distrito       Distrito[]
  Departamento   Departamento @relation(fields: [idDepartamento], references: [id], onUpdate: NoAction, map: "fk_Provincia_Departamento")

  @@index([idDepartamento], map: "idx_idDepartamento_Provincia")
}

model Representada {
  id          Int           @id(map: "PK__Represen__3213E83F7FF6F1BE")
  nombre      String        @db.VarChar(45)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  Externo     Externo[]
  LaborVisita LaborVisita[]
  Visita      Visita[]
}

model SubLabor {
  id          Int           @id(map: "PK__SubLabor__3213E83F8E81D23F") @default(autoincrement())
  nombre      String        @db.VarChar(45)
  idLabor     Int
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  LaborVisita LaborVisita[]
  Labor       Labor         @relation(fields: [idLabor], references: [id], onUpdate: NoAction, map: "fk_Labor_SubLabor1")
}

model Variedad {
  id           Int        @id(map: "PK__Variedad__3213E83F5547455D") @default(autoincrement())
  nombre       String     @db.VarChar(45)
  idVegetacion Int
  idFoto       Int?
  createdAt    DateTime?  @db.DateTime
  updatedAt    DateTime?  @db.DateTime
  Cultivo      Cultivo[]
  Foto         Foto?      @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Variedad_Foto1")
  Vegetacion   Vegetacion @relation(fields: [idVegetacion], references: [id], onUpdate: NoAction, map: "fk_Variedad_Vegetacion1")
}

model Visita {
  id             Int              @id(map: "PK__Visita__3213E83FA3BA3D00") @default(autoincrement())
  programacion   DateTime?        @db.DateTime
  duracionP      Int?
  objetivo       String?          @db.VarChar(255)
  semana         Int?
  estado         String?          @db.VarChar(12)
  numReprog      Int?
  inicio         DateTime?        @db.DateTime
  finalizacion   DateTime?        @db.DateTime
  duracionV      Int?
  resultado      String?          @db.VarChar(45)
  aFuturo        String?          @db.VarChar(150)
  detalle        String?          @db.VarChar(255)
  latitud        Decimal?         @db.Decimal(10, 6)
  longitud       Decimal?         @db.Decimal(10, 6)
  idColaborador  Int
  idContacto     Int?
  idCultivo      Int?
  idRepresentada Int?
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  motivo         String?          @db.VarChar(255)
  programada     Boolean?
  empresa        String?          @db.VarChar(10)
  negocio        String?          @db.VarChar(20)
  macrozonaId    Int?
  FotoVisita     FotoVisita[]
  LaborVisita    LaborVisita[]
  Colaborador    Colaborador      @relation(fields: [idColaborador], references: [id], onUpdate: NoAction, map: "fk_Visita_Colaborador1")
  Contacto       ContactoPunto?   @relation(fields: [idContacto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Contacto1")
  Cultivo        Cultivo?         @relation(fields: [idCultivo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Cultivo1")
  SuperZona      SuperZona?       @relation(fields: [macrozonaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Macrozona")
  Representada   Representada?    @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Representada1")
  VisitaProducto VisitaProducto[]
}

model ZonaAnterior {
  id             Int              @id(map: "PK__ZonaAnte__3213E83F557B2F8D") @default(autoincrement())
  idEmpresa      Int
  codigo         String           @db.VarChar(4)
  nombre         String           @db.VarChar(80)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  demoplot       Boolean?
  ClienteZonaAnt ClienteZonaAnt[]
  Colaborador    Colaborador[]
  Empresa        Empresa          @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Zona_Empresa1")
}

model BlancoBiologico {
  id                 Int                  @id(map: "PK__BlancoBi__3213E83FFBD81CEA") @default(autoincrement())
  cientifico         String?              @db.VarChar(45)
  estandarizado      String?              @db.VarChar(45)
  idVegetacion       Int
  createdAt          DateTime?            @db.DateTime
  updatedAt          DateTime?            @db.DateTime
  codi               String?              @db.VarChar(5)
  Vegetacion         Vegetacion           @relation(fields: [idVegetacion], references: [id], onUpdate: NoAction, map: "fk_Blanco_Vegetacion1")
  Charla             Charla[]
  CharlaProducto     CharlaProducto[]
  DemoPlot           DemoPlot[]
  NuevaPlanificacion NuevaPlanificacion[]
}

model DemoPlot {
  id                                  Int               @id(map: "PK__DemoPlot__3213E83F320BC81B") @default(autoincrement())
  titulo                              String?           @db.VarChar(255)
  objetivo                            String?           @db.VarChar(255)
  instalacion                         DateTime?         @db.DateTime
  finalizacion                        DateTime?         @db.DateTime
  estado                              String?           @db.VarChar(12)
  validacion                          Boolean?
  idCultivo                           Int
  idContactoP                         Int
  idBlanco                            Int
  idDistrito                          String            @db.VarChar(6)
  idGte                               Int
  createdAt                           DateTime?         @db.DateTime
  updatedAt                           DateTime?         @db.DateTime
  resultado                           String?           @db.VarChar(255)
  seguimiento                         DateTime?         @db.DateTime
  dosis                               Decimal?          @db.Decimal(7, 2)
  gradoInfestacion                    String?           @db.VarChar(5)
  hasCultivo                          Decimal?          @db.Decimal(6, 2)
  idFamilia                           Int?
  diaCampo                            Boolean?
  programacion                        DateTime?         @db.DateTime
  presentacion                        DateTime?         @db.DateTime
  venta                               Boolean?
  cantidad                            Decimal?          @db.Decimal(6, 2)
  importe                             Decimal?          @db.Decimal(6, 2)
  createdBy                           Int?
  updatedBy                           Int?
  fecVenta                            DateTime?         @db.DateTime
  idCharla                            Int?
  checkJefe                           Boolean?
  comentariosRtc                      String?           @db.VarChar(255)
  comentariosJefe                     String?           @db.VarChar(255)
  validatedAt                         DateTime?
  approvedAt                          DateTime?
  planificacionId                     Int?
  validacionCampo                     Boolean?
  validatedCampoAt                    DateTime?
  comentariosRtcCampo                 String?           @db.VarChar(255)
  checkJefeCampo                      Boolean?
  approvedCampoAt                     DateTime?
  comentariosJefeCampo                String?           @db.VarChar(255)
  ConsumoMuestras                     ConsumoMuestras[]
  BlancoBiologico                     BlancoBiologico   @relation(fields: [idBlanco], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Blanco1")
  Charla                              Charla?           @relation(fields: [idCharla], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Demoplot_Charla")
  ContactoDelPunto                    ContactoPunto     @relation(fields: [idContactoP], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_ContactoP1")
  Usuario_DemoPlot_createdByToUsuario Usuario?          @relation("DemoPlot_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_DemoPlot_createdBy1")
  Cultivo                             Cultivo           @relation(fields: [idCultivo], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Cultivo1")
  Familia                             Familia?          @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_DemoPlot_Familia1")
  Gte                                 Gte               @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Gte1")
  Planificacion                       Planificacion?    @relation(fields: [planificacionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_DemoPlot_Planificacion1")
  Distrito                            Distrito          @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Provincia1")
  Usuario_DemoPlot_updatedByToUsuario Usuario?          @relation("DemoPlot_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_DemoPlot_updatedBy1")
  FotoDemoPlot                        FotoDemoPlot[]
  FotoDemoPlotLog                     FotoDemoPlotLog[]

  @@index([idGte, estado], map: "IX_DemoPlot_idGte_estado")
  @@index([idGte, idFamilia], map: "IX_DemoPlot_idGte_idFamilia")
}

model FotoDemoPlot {
  id                                      Int       @id(map: "PK__FotoDemo__3213E83F1BF52518") @default(autoincrement())
  idDemoPlot                              Int
  tipo                                    String?   @db.VarChar(10)
  latitud                                 Decimal?  @db.Decimal(10, 6)
  longitud                                Decimal?  @db.Decimal(10, 6)
  createdAt                               DateTime? @db.DateTime
  updatedAt                               DateTime? @db.DateTime
  rutaFoto                                String?   @db.VarChar(255)
  comentario                              String?   @db.VarChar(Max)
  nombre                                  String?   @db.VarChar(50)
  estado                                  String?   @db.VarChar(15)
  createdBy                               Int?
  updatedBy                               Int?
  DemoPlot                                DemoPlot  @relation(fields: [idDemoPlot], references: [id], onUpdate: NoAction, map: "fk_Foto_DemoPlot1")
  Usuario_FotoDemoPlot_createdByToUsuario Usuario?  @relation("FotoDemoPlot_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoD_createdBy1")
  Usuario_FotoDemoPlot_updatedByToUsuario Usuario?  @relation("FotoDemoPlot_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoD_updatedBy1")
}

model Gte {
  id                 Int                  @id(map: "PK__Gte__3213E83FFF0D0701") @default(autoincrement())
  activo             Boolean?
  idSubZona          Int?
  idColaborador      Int?
  idUsuario          Int?
  createdAt          DateTime?            @db.DateTime
  updatedAt          DateTime?            @db.DateTime
  tipo               String?              @db.VarChar(20)
  Charla             Charla[]
  ContactoPunto      ContactoPunto[]
  DemoPlot           DemoPlot[]
  EntregaMuestras    EntregaMuestras[]
  Colaborador        Colaborador?         @relation(fields: [idColaborador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_Colaborador1")
  SubZona            SubZona?             @relation(fields: [idSubZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_SubZona1")
  Usuario            Usuario?             @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_Usuario1")
  NuevaPlanificacion NuevaPlanificacion[]
  PuntoContacto      PuntoContacto[]
  RegistroLaboralGD  RegistroLaboralGD[]
  VariablePersonal   VariablePersonal[]
  VisitaGteTienda    VisitaGteTienda[]
}

model PuntoContacto {
  id                 Int                  @id(map: "PK__PuntoCon__3213E83FC6CBF460") @default(autoincrement())
  nombre             String               @db.VarChar(90)
  tipoDoc            String?              @db.VarChar(3)
  numDoc             String?              @db.VarChar(20)
  hectareas          Decimal?             @db.Decimal(6, 2)
  tipo               String               @db.VarChar(1)
  dirReferencia      String?              @db.VarChar(90)
  lider              Boolean?
  activo             Boolean
  idGte              Int?
  createdAt          DateTime?            @db.DateTime
  updatedAt          DateTime?            @db.DateTime
  idDistrito         String?              @db.VarChar(6)
  idEmpresa          Int?
  codZona            String?              @db.VarChar(4)
  subTipo            String?              @db.VarChar(2)
  cantR0             Int?
  cantR1             Int?
  cantR2             Int?
  aniversario        DateTime?            @db.Date
  gestion            Boolean?
  idColaborador      Int?
  sede               String?              @db.VarChar(30)
  Charla             Charla[]
  ContactoPunto      ContactoPunto[]
  Fundo              Fundo[]
  NuevaPlanificacion NuevaPlanificacion[]
  Colaborador        Colaborador?         @relation(fields: [idColaborador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntoContacto_Colaborador")
  Distrito           Distrito?            @relation(fields: [idDistrito], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntoContacto_Distrito")
  Empresa            Empresa?             @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntoContacto_Empresa1")
  Gte                Gte?                 @relation(fields: [idGte], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntoContacto_Gte")
  VisitaGteTienda    VisitaGteTienda[]
}

model SubZona {
  id          Int        @id(map: "PK__SubZona__3213E83FCC954CB7") @default(autoincrement())
  codi        String     @db.VarChar(3)
  nombre      String?    @db.VarChar(70)
  createdAt   DateTime?  @db.DateTime
  updatedAt   DateTime?  @db.DateTime
  idSuperZona Int?
  idZona      Int?
  Gte         Gte[]
  SuperZona   SuperZona? @relation(fields: [idSuperZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_SubZona_SuperZona1")
  Zona        Zona?      @relation(fields: [idZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_SubZona_Zona1")
}

model Vegetacion {
  id                 Int                  @id(map: "PK__Vegetaci__3213E83FDAAEF8A1") @default(autoincrement())
  nombre             String               @db.VarChar(45)
  updatedAt          DateTime?            @db.DateTime
  createdAt          DateTime?            @db.DateTime
  codi               String?              @db.VarChar(4)
  BlancoBiologico    BlancoBiologico[]
  Charla             Charla[]
  NuevaPlanificacion NuevaPlanificacion[]
  Variedad           Variedad[]
}

model ContactoPunto {
  id                                         Int           @id(map: "PK__Contacto__3213E83F168140F3") @default(autoincrement())
  nombre                                     String        @db.VarChar(45)
  apellido                                   String        @db.VarChar(45)
  cargo                                      String        @db.VarChar(50)
  celularA                                   String?       @db.VarChar(20)
  celularB                                   String?       @db.VarChar(20)
  idPunto                                    Int
  createdAt                                  DateTime?     @db.DateTime
  updatedAt                                  DateTime?     @db.DateTime
  email                                      String?       @db.VarChar(50)
  tipo                                       String        @db.VarChar(10)
  idGte                                      Int?
  activo                                     Boolean?
  Asistencia                                 Asistencia[]
  Charla_Charla_idPropietarioToContactoPunto Charla[]      @relation("Charla_idPropietarioToContactoPunto")
  Charla_Charla_idMostradorToContactoPunto   Charla[]      @relation("Charla_idMostradorToContactoPunto")
  PuntoContacto                              PuntoContacto @relation(fields: [idPunto], references: [id], onUpdate: NoAction, map: "fk_Contacto_PuntoContacto")
  Gte                                        Gte?          @relation(fields: [idGte], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ContactoPunto_Gte1")
  DemoPlot                                   DemoPlot[]
  Fundo                                      Fundo[]
  Visita                                     Visita[]
}

model PuntoUbigeo {
  id         Int       @id(map: "PK__PuntoUbi__3213E83FE424B6D1") @default(autoincrement())
  idPunto    Int
  idDistrito String    @db.VarChar(6)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Fundo      Fundo[]
}

model ClienteZona {
  id         Int       @id(map: "PK__ClienteZ__3213E83FCFA3D55D") @default(autoincrement())
  idEmpresa  Int?
  codZona    String    @db.VarChar(4)
  codCliente String    @db.VarChar(20)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  nomCliente String?   @db.VarChar(200)
  Empresa    Empresa?  @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ClienteZona1_Empresa")
}

model SuperZona {
  id                 Int                  @id(map: "PK__SuperZon__3213E83F2126F16C")
  codi               String               @db.VarChar(3)
  nombre             String               @db.VarChar(70)
  createdAt          DateTime?            @db.DateTime
  updatedAt          DateTime?            @db.DateTime
  ColaboradorJefe    ColaboradorJefe[]
  ExternoColaborador ExternoColaborador[]
  SubZona            SubZona[]
  Visita             Visita[]
}

model Zona {
  id        Int       @id(map: "PK__Zona__3213E83F0DD7EB54") @default(autoincrement())
  codi      String    @db.VarChar(3)
  nombre    String    @db.VarChar(70)
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  SubZona   SubZona[]
}

model ColaboradorJefe {
  id                                                     Int         @id(map: "PK__Colabora__3213E83F75414E03") @default(autoincrement())
  idJefe                                                 Int
  idColaborador                                          Int
  idMacroZona                                            Int?
  idEmpresa                                              Int?
  Colaborador_ColaboradorJefe_idColaboradorToColaborador Colaborador @relation("ColaboradorJefe_idColaboradorToColaborador", fields: [idColaborador], references: [id], onUpdate: NoAction, map: "fk_ColabJefe_Colab1")
  Colaborador_ColaboradorJefe_idJefeToColaborador        Colaborador @relation("ColaboradorJefe_idJefeToColaborador", fields: [idJefe], references: [id], onUpdate: NoAction, map: "fk_ColabJefe_Jefe1")
  SuperZona                                              SuperZona?  @relation(fields: [idMacroZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ColabJefe_MacroZona")
  Empresa                                                Empresa?    @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Jefe_Empresa")
}

model Asistencia {
  id                                    Int           @id(map: "PK__Asistenc__3213E83F8CFF4C6D") @default(autoincrement())
  idContactoTienda                      Int
  idCharla                              Int
  createdAt                             DateTime?     @db.DateTime
  createdBy                             Int?
  updatedAt                             DateTime?     @db.DateTime
  updatedBy                             Int?
  Charla                                Charla        @relation(fields: [idCharla], references: [id], onUpdate: NoAction, map: "fk_Asistencia_Charla1")
  ContactoPunto                         ContactoPunto @relation(fields: [idContactoTienda], references: [id], onUpdate: NoAction, map: "fk_Asistencia_ContactoTienda1")
  Usuario_Asistencia_createdByToUsuario Usuario?      @relation("Asistencia_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Asistencia_createdBy1")
  Usuario_Asistencia_updatedByToUsuario Usuario?      @relation("Asistencia_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Asistencia_updatedBy1")
}

model Charla {
  id                                                Int              @id(map: "PK__Charla__3213E83F5A8BC2A3") @default(autoincrement())
  tema                                              String?          @db.VarChar(255)
  asistentes                                        Int?
  hectareas                                         Decimal?         @db.Decimal(6, 2)
  dosis                                             Decimal?         @db.Decimal(6, 2)
  efectivo                                          Boolean?
  comentarios                                       String?          @db.VarChar(255)
  demoplots                                         Int?
  estado                                            String?          @db.VarChar(12)
  programacion                                      DateTime?        @db.DateTime
  ejecucion                                         DateTime?        @db.DateTime
  cancelacion                                       DateTime?        @db.DateTime
  motivo                                            String?          @db.VarChar(255)
  idVegetacion                                      Int?
  idBlanco                                          Int?
  idDistrito                                        String?          @db.VarChar(6)
  idFamilia                                         Int?
  idGte                                             Int
  idTienda                                          Int
  createdAt                                         DateTime?        @db.DateTime
  createdBy                                         Int?
  updatedAt                                         DateTime?        @db.DateTime
  updatedBy                                         Int?
  visita                                            DateTime?        @db.DateTime
  duracionVisita                                    Int?
  duracionCharla                                    Int?
  objetivo                                          String?          @db.VarChar(255)
  idPropietario                                     Int?
  idMostrador                                       Int?
  planificacion                                     DateTime?        @db.DateTime
  Asistencia                                        Asistencia[]
  BlancoBiologico                                   BlancoBiologico? @relation(fields: [idBlanco], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Blanco1")
  Familia                                           Familia?         @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Familia1")
  Gte                                               Gte              @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_Charla_Gte1")
  Distrito                                          Distrito?        @relation(fields: [idDistrito], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Provincia1")
  PuntoContacto                                     PuntoContacto    @relation(fields: [idTienda], references: [id], onUpdate: NoAction, map: "fk_Charla_Tienda1")
  Usuario_Charla_createdByToUsuario                 Usuario?         @relation("Charla_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Usuario1")
  Usuario_Charla_updatedByToUsuario                 Usuario?         @relation("Charla_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Usuario2")
  Vegetacion                                        Vegetacion?      @relation(fields: [idVegetacion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Charla_Vegetacion1")
  ContactoPunto_Charla_idPropietarioToContactoPunto ContactoPunto?   @relation("Charla_idPropietarioToContactoPunto", fields: [idPropietario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_CharlaVisita1")
  ContactoPunto_Charla_idMostradorToContactoPunto   ContactoPunto?   @relation("Charla_idMostradorToContactoPunto", fields: [idMostrador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_CharlaVisita2")
  CharlaProducto                                    CharlaProducto[]
  DemoPlot                                          DemoPlot[]
  FotoCharla                                        FotoCharla[]
}

model FotoCharla {
  id                                    Int       @id(map: "PK__FotoChar__3213E83F5FF3A739") @default(autoincrement())
  idCharla                              Int
  nombre                                String?   @db.VarChar(50)
  comentario                            String?   @db.VarChar(255)
  rutaFoto                              String?   @db.VarChar(255)
  tipo                                  String?   @db.VarChar(10)
  latitud                               Decimal?  @db.Decimal(10, 6)
  longitud                              Decimal?  @db.Decimal(10, 6)
  estado                                String?   @db.VarChar(15)
  createdAt                             DateTime? @db.DateTime
  createdBy                             Int?
  updatedAt                             DateTime? @db.DateTime
  updatedBy                             Int?
  Charla                                Charla    @relation(fields: [idCharla], references: [id], onUpdate: NoAction, map: "fk_Foto_Charla1")
  Usuario_FotoCharla_createdByToUsuario Usuario?  @relation("FotoCharla_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoCharla_Usuario1")
  Usuario_FotoCharla_updatedByToUsuario Usuario?  @relation("FotoCharla_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoCharla_Usuario2")
}

model CharlaProducto {
  id              Int              @id(map: "PK__CharlaPr__3213E83FC1BC5952") @default(autoincrement())
  idCharla        Int
  idFamilia       Int
  idBlanco        Int?
  createdAt       DateTime?        @db.DateTime
  createdBy       Int?
  updatedAt       DateTime?        @db.DateTime
  updatedBy       Int?
  BlancoBiologico BlancoBiologico? @relation(fields: [idBlanco], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_CharlaProducto_Blanco1")
  Charla          Charla           @relation(fields: [idCharla], references: [id], onUpdate: NoAction, map: "fk_CharlaProducto_Charla1")
  Familia         Familia          @relation(fields: [idFamilia], references: [id], onUpdate: NoAction, map: "fk_CharlaProducto_Familia1")
}

model FotoDemoPlotLog {
  id             Int       @id(map: "PK__FotoDemo__3213E83F0948CE0D") @default(autoincrement())
  idFotoDemoPlot Int?
  idDemoPlot     Int
  nombre         String?   @db.VarChar(50)
  comentario     String?   @db.VarChar(255)
  rutaFoto       String?   @db.VarChar(255)
  tipo           String?   @db.VarChar(10)
  latitud        Decimal?  @db.Decimal(10, 6)
  longitud       Decimal?  @db.Decimal(10, 6)
  estado         String?   @db.VarChar(15)
  createdAt      DateTime? @db.DateTime
  createdBy      Int?
  updatedAt      DateTime? @db.DateTime
  updatedBy      Int?
  deletedAt      DateTime  @db.DateTime
  deletedBy      Int
  motivo         String    @db.VarChar(255)
  DemoPlot       DemoPlot  @relation(fields: [idDemoPlot], references: [id], onUpdate: NoAction, map: "fk_FotoDLog_DemoPlot1")
  Usuario        Usuario   @relation(fields: [deletedBy], references: [id], onUpdate: NoAction, map: "fk_FotoDLog_Usuario1")
}

model Externo {
  id                                                    Int                  @id(map: "PK__Externo__3213E83FC7A0FB3D") @default(autoincrement())
  cargo                                                 String?              @db.VarChar(45)
  idRepresentada                                        Int
  idUsuario                                             Int?
  createdAt                                             DateTime?            @db.DateTime
  updatedAt                                             DateTime?            @db.DateTime
  Representada                                          Representada         @relation(fields: [idRepresentada], references: [id], onUpdate: NoAction, map: "fk_ExternoRepresentada")
  Usuario                                               Usuario?             @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ExternoUsuario")
  ExternoColaborador_ExternoColaborador_jefeIdToExterno ExternoColaborador[] @relation("ExternoColaborador_jefeIdToExterno")
  ExternoColaborador                                    ExternoColaborador[]
}

model CostoLaboral {
  id                                      Int       @id(map: "PK__CostoLab__3213E83F6527997F") @default(autoincrement())
  conteo1                                 Decimal?  @db.Decimal(18, 0)
  conteo2                                 Decimal?  @db.Decimal(18, 0)
  diacampo                                Decimal?  @db.Decimal(18, 0)
  sueldo                                  Decimal?  @db.Decimal(18, 0)
  viaticos                                Decimal?  @db.Decimal(18, 0)
  moto                                    Decimal?  @db.Decimal(18, 0)
  year                                    Int
  month                                   Int
  createdAt                               DateTime? @db.DateTime
  createdBy                               Int?
  updatedAt                               DateTime? @db.DateTime
  updatedBy                               Int?
  linea                                   Decimal?  @db.Decimal(18, 0)
  celular                                 Decimal?  @db.Decimal(18, 0)
  servGte                                 Decimal?  @db.Decimal(18, 0)
  Usuario_CostoLaboral_createdByToUsuario Usuario?  @relation("CostoLaboral_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_CostoLaboralCreated")
  Usuario_CostoLaboral_updatedByToUsuario Usuario?  @relation("CostoLaboral_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_CostoLaboralUpdated")
}

model VariablePersonal {
  id                                          Int       @id(map: "PK__Variable__3213E83FED128FFE") @default(autoincrement())
  variable                                    Decimal?  @db.Decimal(7, 2)
  bono10                                      Decimal?  @db.Decimal(6, 2)
  vidaLey                                     Decimal?  @db.Decimal(6, 2)
  beneficio                                   Decimal?  @db.Decimal(7, 2)
  total                                       Decimal?  @db.Decimal(7, 2)
  year                                        Int
  month                                       Int
  idGte                                       Int
  createdAt                                   DateTime? @db.DateTime
  createdBy                                   Int?
  updatedAt                                   DateTime? @db.DateTime
  updatedBy                                   Int?
  sctr                                        Decimal?  @db.Decimal(6, 0)
  Usuario_VariablePersonal_createdByToUsuario Usuario?  @relation("VariablePersonal_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_VariablePersonalCreated")
  Gte                                         Gte       @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_VariablePersonalGenerador")
  Usuario_VariablePersonal_updatedByToUsuario Usuario?  @relation("VariablePersonal_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_VariablePersonalUpdated")

  @@unique([idGte, year, month], name: "idGte_year_month", map: "idGte_year_month")
}

model RegistroLaboralGD {
  id                                           Int       @id(map: "PK__Registro__3213E83F041C2A04") @default(autoincrement())
  ingreso                                      DateTime? @db.DateTime
  cese                                         DateTime? @db.DateTime
  idGte                                        Int
  createdAt                                    DateTime? @db.DateTime
  createdBy                                    Int?
  updatedAt                                    DateTime? @db.DateTime
  updatedBy                                    Int?
  Usuario_RegistroLaboralGD_createdByToUsuario Usuario?  @relation("RegistroLaboralGD_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_RegistroLaboralCreated")
  Gte                                          Gte       @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_RegistroLaboralGenerador")
  Usuario_RegistroLaboralGD_updatedByToUsuario Usuario?  @relation("RegistroLaboralGD_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_RegistroLaboralUpdated")
}

model ConsumoMuestras {
  id                                         Int              @id(map: "PK__ConsumoM__3213E83FB6F1ACCC") @default(autoincrement())
  idEntrega                                  Int?
  idDemoplot                                 Int
  consumo                                    Decimal          @db.Decimal(8, 2)
  complemento                                Decimal?         @db.Decimal(8, 2)
  fechaConsumo                               DateTime?        @db.DateTime
  createdAt                                  DateTime?        @db.DateTime
  updatedAt                                  DateTime?        @db.DateTime
  createdBy                                  Int?
  updatedBy                                  Int?
  comentarios                                String?          @db.VarChar(255)
  DemoPlot                                   DemoPlot         @relation(fields: [idDemoplot], references: [id], onUpdate: NoAction, map: "fk_ConsumoDemoplot")
  EntregaMuestras                            EntregaMuestras? @relation(fields: [idEntrega], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ConsumoEntrega")
  Usuario_ConsumoMuestras_createdByToUsuario Usuario?         @relation("ConsumoMuestras_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ConsumoMuestrasCreated")
  Usuario_ConsumoMuestras_updatedByToUsuario Usuario?         @relation("ConsumoMuestras_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ConsumoMuestrasUpdated")

  @@index([idDemoplot], map: "IX_ConsumoMuestras_idDemoplot")
}

model EntregaMuestras {
  id                                         Int               @id(map: "PK__EntregaM__3213E83F3DA43FF4") @default(autoincrement())
  idFamilia                                  Int
  idGte                                      Int
  presentacion                               Int?
  unidades                                   Decimal?          @db.Decimal(6, 2)
  total                                      Decimal?          @db.Decimal(8, 2)
  agotado                                    Boolean?
  facturacion                                DateTime?         @db.DateTime
  recepcion                                  DateTime?         @db.DateTime
  createdAt                                  DateTime?         @db.DateTime
  updatedAt                                  DateTime?         @db.DateTime
  createdBy                                  Int?
  updatedBy                                  Int?
  precio                                     Decimal?          @db.Decimal(6, 2)
  perdida                                    Decimal?          @db.Decimal(8, 0)
  ConsumoMuestras                            ConsumoMuestras[]
  Usuario_EntregaMuestras_createdByToUsuario Usuario?          @relation("EntregaMuestras_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_EntregaMuestrasCreated")
  Familia                                    Familia           @relation(fields: [idFamilia], references: [id], onUpdate: NoAction, map: "fk_EntregaMuestrasFamilia")
  Gte                                        Gte               @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_EntregaMuestrasGenerador")
  Usuario_EntregaMuestras_updatedByToUsuario Usuario?          @relation("EntregaMuestras_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_EntregaMuestrasUpdated")

  @@index([idGte, idFamilia], map: "IX_EntregaMuestras_idGte_idFamilia")
}

model FotoVisita {
  id                                    Int       @id(map: "PK__FotoVisi__3213E83F4041AFEA") @default(autoincrement())
  idVisita                              Int
  nombre                                String?   @db.VarChar(50)
  comentario                            String?   @db.VarChar(255)
  rutaFoto                              String?   @db.VarChar(255)
  tipo                                  String?   @db.VarChar(10)
  latitud                               Decimal?  @db.Decimal(10, 6)
  longitud                              Decimal?  @db.Decimal(10, 6)
  estado                                String?   @db.VarChar(15)
  createdAt                             DateTime? @db.DateTime
  createdBy                             Int?
  updatedAt                             DateTime? @db.DateTime
  updatedBy                             Int?
  Usuario_FotoVisita_createdByToUsuario Usuario?  @relation("FotoVisita_createdByToUsuario", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoV_UsuarioC")
  Usuario_FotoVisita_updatedByToUsuario Usuario?  @relation("FotoVisita_updatedByToUsuario", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_FotoV_UsuarioU")
  Visita                                Visita    @relation(fields: [idVisita], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_FotoV_Visita")
}

model VisitaProducto {
  id        Int       @id(map: "PK__VisitaAr__3213E83F47949C84") @default(autoincrement())
  idVisita  Int
  idFamilia Int
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  Visita    Visita    @relation(fields: [idVisita], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_VisitaArticulo_Visita1")
  Familia   Familia   @relation(fields: [idFamilia], references: [id], onUpdate: NoAction, map: "fk_VisitaProducto_Producto")
}

model VisitaGteTienda {
  id            Int           @id(map: "PK__VisitaGt__3213E83FE2D5877C") @default(autoincrement())
  idGte         Int
  idPunto       Int
  objetivo      String        @db.VarChar(50)
  comentarios   String?       @db.VarChar(255)
  latitud       Decimal?      @db.Decimal(10, 6)
  longitud      Decimal?      @db.Decimal(10, 6)
  createdAt     DateTime?     @db.DateTime
  idFamilia     Int?
  idFoto        Int?
  cantidad      Decimal?      @db.Decimal(6, 2)
  Familia       Familia?      @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_VisitaGteTiend3")
  Foto          Foto?         @relation(fields: [idFoto], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_VisitaGteTiend4")
  Gte           Gte           @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_VisitaGteTienda1")
  PuntoContacto PuntoContacto @relation(fields: [idPunto], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_VisitaGteTienda2")
}

model MomentoAplicacion {
  id                 Int                  @id(map: "PK__MomentoA__3213E83F6A816E5D") @default(autoincrement())
  nombre             String               @db.VarChar(50)
  NuevaPlanificacion NuevaPlanificacion[]
}

model Planificacion {
  id              Int         @id(map: "PK__Planific__3213E83F0B04E56E") @default(autoincrement())
  idColaborador   Int
  mes             Int
  cantDemos       Int
  dosisCil        Decimal?    @db.Decimal(11, 4)
  dosisMoc        Decimal?    @db.Decimal(11, 4)
  muestraTotal    Decimal?    @db.Decimal(11, 4)
  estado          String      @db.VarChar(20)
  checkJefe       Boolean?
  comentarios     String?     @db.VarChar(255)
  activo          Boolean     @default(true, map: "DF__Planifica__activ__76B698BF")
  approvedAt      DateTime?
  createdAt       DateTime    @default(dbgenerated("sysutcdatetime()"), map: "DF__Planifica__creat__77AABCF8")
  createdBy       Int?
  updatedAt       DateTime    @default(dbgenerated("sysutcdatetime()"), map: "DF__Planifica__updat__789EE131")
  updatedBy       Int?
  comentariosJefe String?     @db.VarChar(255)
  DemoPlot        DemoPlot[]
  Colaborador     Colaborador @relation(fields: [idColaborador], references: [id], onUpdate: NoAction, map: "FK__Planifica__idCol__74CE504D")
}

model ExternoColaborador {
  id                                         Int         @id(map: "PK__ExternoC__3213E83F083C03A5") @default(autoincrement())
  externoId                                  Int
  colaboradorId                              Int
  macrozonaId                                Int
  jefeId                                     Int?
  Externo_ExternoColaborador_jefeIdToExterno Externo?    @relation("ExternoColaborador_jefeIdToExterno", fields: [jefeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ExternoColaborador_Jefe_Externo")
  Colaborador                                Colaborador @relation(fields: [colaboradorId], references: [id], onUpdate: NoAction, map: "FK__ExternoCo__colab__153B1FDF")
  Externo                                    Externo     @relation(fields: [externoId], references: [id], onUpdate: NoAction, map: "FK__ExternoCo__exter__1446FBA6")
  SuperZona                                  SuperZona   @relation(fields: [macrozonaId], references: [id], onUpdate: NoAction, map: "FK__ExternoCo__macro__162F4418")
}

model NuevaPlanificacion {
  id                Int               @id(map: "PK__NuevaPla__3213E83F275D8162") @default(autoincrement())
  idColaborador     Int
  mes               Int
  gteId             Int
  tiendaId          Int
  vegetacionId      Int
  momentoAplicaId   Int
  paramEvaAntes     String?           @db.VarChar(150)
  paramEvaDespues   String?           @db.VarChar(150)
  productoId        Int
  blancoId          Int
  dosisMoc          Decimal?          @db.Decimal(11, 4)
  cantDemos         Int
  muestraTotal      Decimal?          @db.Decimal(11, 4)
  estado            String            @db.VarChar(20)
  checkJefe         Boolean?
  comentariosJefe   String?           @db.VarChar(255)
  comentarios       String?           @db.VarChar(255)
  activo            Boolean           @default(true, map: "DF__NuevaPlan__activ__247D636F")
  approvedAt        DateTime?
  createdAt         DateTime          @default(dbgenerated("sysutcdatetime()"), map: "DF__NuevaPlan__creat__257187A8")
  createdBy         Int?
  updatedAt         DateTime          @default(dbgenerated("sysutcdatetime()"), map: "DF__NuevaPlan__updat__2665ABE1")
  updatedBy         Int?
  monthYear         DateTime          @db.Date
  BlancoBiologico   BlancoBiologico   @relation(fields: [blancoId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__blanc__23893F36")
  Gte               Gte               @relation(fields: [gteId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__gteId__1EC48A19")
  Colaborador       Colaborador       @relation(fields: [idColaborador], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__idCol__1DD065E0")
  MomentoAplicacion MomentoAplicacion @relation(fields: [momentoAplicaId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__momen__21A0F6C4")
  Familia           Familia           @relation(fields: [productoId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__produ__22951AFD")
  PuntoContacto     PuntoContacto     @relation(fields: [tiendaId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__tiend__1FB8AE52")
  Vegetacion        Vegetacion        @relation(fields: [vegetacionId], references: [id], onUpdate: NoAction, map: "FK__NuevaPlan__veget__20ACD28B")
}

model ClienteVendedorExactus {
  id        Int        @id(map: "PK__ClienteV__3213E83F33CC0E29") @default(autoincrement())
  empresa   String     @db.VarChar(2)
  codcli    String     @db.VarChar(20)
  nomcli    String?    @db.VarChar(90)
  codven    String     @db.VarChar(4)
  nomvende  String?    @db.VarChar(80)
  email     String?    @db.VarChar(150)
  activo    Boolean    @default(true, map: "DF__ClienteVe__activ__5708E33C")
  updatedAt DateTime   @default(dbgenerated("sysutcdatetime()"), map: "DF__ClienteVe__updat__57FD0775")
  Contacto  Contacto[]
}

model ClienteVendedorGC {
  id                                                   Int             @id(map: "PK__ClienteV__3213E83F1EDE413A") @default(autoincrement())
  empresaId                                            Int
  codcli                                               String          @db.VarChar(20)
  nomcli                                               String?         @db.VarChar(90)
  codven                                               String          @db.VarChar(4)
  nomvende                                             String?         @db.VarChar(80)
  email                                                String?         @db.VarChar(150)
  activo                                               Boolean         @default(true, map: "DF__ClienteVe__activ__5CC1BC92")
  createdAt                                            DateTime        @default(dbgenerated("sysutcdatetime()"), map: "DF__ClienteVe__creat__5DB5E0CB")
  createdBy                                            Int
  updatedAt                                            DateTime        @default(dbgenerated("sysutcdatetime()"), map: "DF__ClienteVe__updat__5F9E293D")
  updatedBy                                            Int?
  Colaborador_ClienteVendedorGC_createdByToColaborador Colaborador     @relation("ClienteVendedorGC_createdByToColaborador", fields: [createdBy], references: [id], onUpdate: NoAction, map: "FK__ClienteVe__creat__5EAA0504")
  Empresa                                              Empresa         @relation(fields: [empresaId], references: [id], onUpdate: NoAction, map: "FK__ClienteVe__empre__5BCD9859")
  Colaborador_ClienteVendedorGC_updatedByToColaborador Colaborador?    @relation("ClienteVendedorGC_updatedByToColaborador", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ClienteVe__updat__60924D76")
  Contacto                                             Contacto[]
  TiendaCliente                                        TiendaCliente[]

  @@unique([empresaId, codcli, codven], map: "UQ_CVGC_emp_cli_ven")
}

model TiendaCliente {
  id                Int                @id(map: "PK__TiendaCl__3213E83FFEE38056") @default(autoincrement())
  codcli            String             @db.VarChar(20)
  id_tda            Int?
  descrip           String?            @db.VarChar(90)
  codsbz            String?            @db.VarChar(3)
  direccion         String?            @db.VarChar(110)
  debaja            Int?
  ubigeo            String?            @db.VarChar(6)
  observ            String?            @db.VarChar(Max)
  vigente           Boolean            @default(true, map: "DF__TiendaCli__vigen__6C040022")
  updated_at        DateTime           @default(dbgenerated("sysutcdatetime()"), map: "DF__TiendaCli__updat__6CF8245B")
  editable          Boolean            @default(false, map: "DF_TiendaCliente_editable")
  createdAt         DateTime           @default(dbgenerated("sysutcdatetime()"), map: "DF_TiendaCliente_createdAt")
  createdBy         Int?
  clienteVendedorId Int?
  ClienteVendedorGC ClienteVendedorGC? @relation(fields: [clienteVendedorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "TiendaCliente_ClienteVendedorGC")
  Colaborador       Colaborador?       @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "TiendaCliente_CreatedBy")
}
