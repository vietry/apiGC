generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("SQLSERVER_URL")
}

model Foto {
  id        Int        @id(map: "PK__Foto__3213E83FC514EA43") @default(autoincrement())
  ruta      String     @db.VarChar(50)
  tipo      String?    @db.VarChar(5)
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Usuario   Usuario[]
  Variedad  Variedad[]
  Visita    Visita[]
}

model Usuario {
  id            Int           @id(map: "PK__Usuario__3213E83F809DA818") @default(autoincrement())
  nombres       String        @db.VarChar(45)
  apellidos     String?       @db.VarChar(45)
  email         String        @db.VarChar(40)
  emailValidado Boolean
  password      String        @db.VarChar(255)
  rol           String        @db.VarChar(10)
  celular       String?       @db.VarChar(15)
  idFoto        Int?
  createdAt     DateTime?     @db.DateTime
  updatedAt     DateTime?     @db.DateTime
  Colaborador   Colaborador[]
  Gte           Gte[]
  Foto          Foto?         @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuario_Foto")
}

model Area {
  id          Int           @id(map: "PK__Area__3213E83FDDCE8637") @default(autoincrement())
  nombre      String        @db.VarChar(20)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  Colaborador Colaborador[]
}

model Articulo {
  id             Int              @id(map: "PK__Articulo__3213E83F9706ED75") @default(autoincrement())
  codigo         String           @db.VarChar(10)
  nombre         String           @db.VarChar(90)
  present        Decimal?         @db.Decimal(8, 3)
  codFamilia     String?          @db.VarChar(8)
  codClase       String?          @db.VarChar(6)
  codLinea       String?          @db.VarChar(6)
  codDivision    String?          @db.VarChar(6)
  idFamilia      Int?
  idClase        Int?
  idLinea        Int?
  idDivision     Int?
  idEmpresa      Int
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  activo         Boolean?
  Clase          Clase?           @relation(fields: [idClase], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Clase1")
  Division       Division?        @relation(fields: [idDivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Division1")
  Empresa        Empresa          @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fkArticulo_Empresa1")
  Familia        Familia?         @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Familia1")
  Linea          Linea?           @relation(fields: [idLinea], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Linea1")
  VisitaArticulo VisitaArticulo[]
}

model Clase {
  id        Int        @id(map: "PK__Clase__3213E83F0492C067")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Clase1")
}

model Cliente {
  id             Int              @id(map: "PK__Cliente__3213E83F3CD5CEC1") @default(autoincrement())
  codigo         String           @db.VarChar(20)
  nombre         String           @db.VarChar(90)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  codGrupo       String?          @db.VarChar(20)
  enfoque        Boolean?
  idEmpresa      Int?
  Empresa        Empresa?         @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Cliente_Empresa")
  ClienteUbigeo  ClienteUbigeo[]
  ClienteZonaAnt ClienteZonaAnt[]
  Contacto       Contacto[]
}

model ClienteUbigeo {
  id         Int       @id(map: "PK__ClienteU__3213E83F1ABC342C") @default(autoincrement())
  idCliente  Int
  idDistrito String    @db.VarChar(6)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Cliente    Cliente   @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Cliente")
  Distrito   Distrito  @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Distrito")
  Fundo      Fundo[]
}

model ClienteZonaAnt {
  id           Int          @id(map: "PK__ClienteZ__3213E83F3EFC8BC1") @default(autoincrement())
  idEmpresa    Int
  idCliente    Int
  codCliente   String       @db.VarChar(20)
  idZonaAnt    Int
  codZona      String       @db.VarChar(4)
  createdAt    DateTime?    @db.DateTime
  updatedAt    DateTime?    @db.DateTime
  Cliente      Cliente      @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Cliente")
  Empresa      Empresa      @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Empresa")
  ZonaAnterior ZonaAnterior @relation(fields: [idZonaAnt], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_ZonaA")
}

model Colaborador {
  id           Int           @id(map: "PK__Colabora__3213E83F8BBB325E") @default(autoincrement())
  cargo        String?       @db.VarChar(45)
  idArea       Int
  idZonaAnt    Int?
  idUsuario    Int
  createdAt    DateTime?     @db.DateTime
  updatedAt    DateTime?     @db.DateTime
  Usuario      Usuario       @relation(fields: [idUsuario], references: [id], onUpdate: NoAction, map: "fk_Colaborador_Usuario1")
  ZonaAnterior ZonaAnterior? @relation(fields: [idZonaAnt], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Colaborador_Zona1")
  Area         Area          @relation(fields: [idArea], references: [id], onUpdate: NoAction, map: "fk_ColaboradorArea")
  Gte          Gte[]
  Visita       Visita[]
}

model Contacto {
  id        Int       @id(map: "PK__Contacto__3213E83F5C1D6684") @default(autoincrement())
  nombre    String    @db.VarChar(45)
  apellido  String    @db.VarChar(45)
  cargo     String    @db.VarChar(20)
  correo    String?   @db.VarChar(30)
  celularA  String?   @db.VarChar(20)
  celularB  String?   @db.VarChar(20)
  idCliente Int
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  Cliente   Cliente   @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_Contacto_Cliente")
  Visita    Visita[]
}

model Cultivo {
  id            Int        @id(map: "PK__Cultivo__3213E83F997A6390") @default(autoincrement())
  certificacion String?    @db.VarChar(20)
  hectareas     Decimal?   @db.Decimal(6, 2)
  mesInicio     String?    @db.VarChar(20)
  mesFinal      String?    @db.VarChar(20)
  observacion   String?    @db.VarChar(255)
  idFundo       Int
  idVariedad    Int
  createdAt     DateTime?  @db.DateTime
  updatedAt     DateTime?  @db.DateTime
  centroPoblado String?    @db.VarChar(70)
  Fundo         Fundo      @relation(fields: [idFundo], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Fundo1")
  Variedad      Variedad   @relation(fields: [idVariedad], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Variedad1")
  DemoPlot      DemoPlot[]
  Visita        Visita[]
}

model Departamento {
  id        String      @id(map: "PK__Departam__3213E83FBC89D2BE") @db.VarChar(2)
  nombre    String      @unique(map: "UQ_nombre_Departamento") @db.VarChar(30)
  Provincia Provincia[]

  @@index([nombre], map: "idx_nombre_Departamento")
}

model Distrito {
  id             String          @id(map: "PK__Distrito__3213E83F8DA819A3") @db.VarChar(6)
  nombre         String          @db.VarChar(40)
  idProvincia    String          @db.VarChar(4)
  idDepartamento String          @db.VarChar(2)
  ClienteUbigeo  ClienteUbigeo[]
  DemoPlot       DemoPlot[]
  Provincia      Provincia       @relation(fields: [idProvincia], references: [id], onUpdate: NoAction, map: "FK_Distrito_Provincia")
  Fundo          Fundo[]
  PuntoContacto  PuntoContacto[]
  PuntoUbigeo    PuntoUbigeo[]
}

model Division {
  id        Int        @id(map: "PK__Division__3213E83FFEA24C03")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(30)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Division1")
  Negocio   Negocio[]
}

model Empresa {
  id             Int              @id(map: "PK__Empresa__3213E83FEFAFEE2A")
  nomEmpresa     String           @db.VarChar(15)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  Articulo       Articulo[]
  Clase          Clase[]
  Cliente        Cliente[]
  ClienteZona    ClienteZona[]
  ClienteZonaAnt ClienteZonaAnt[]
  Division       Division[]
  Familia        Familia[]
  Linea          Linea[]
}

model Familia {
  id        Int        @id(map: "PK__Familia__3213E83F9CBCB561") @default(autoincrement())
  codigo    String     @db.VarChar(7)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  enfoque   Boolean?
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  DemoPlot  DemoPlot[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Familia1")
}

model Fundo {
  id              Int            @id(map: "PK__Fundo__3213E83FDB143413") @default(autoincrement())
  nombre          String?        @db.VarChar(45)
  idClienteUbigeo Int?
  createdAt       DateTime?      @db.DateTime
  updatedAt       DateTime?      @db.DateTime
  idPuntoUbigeo   Int?
  centroPoblado   String?        @db.VarChar(80)
  idPuntoContacto Int?
  idContactoPunto Int?
  idDistrito      String?        @db.VarChar(6)
  Cultivo         Cultivo[]
  ClienteUbigeo   ClienteUbigeo? @relation(fields: [idClienteUbigeo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_ClienteUbigeo")
  ContactoPunto   ContactoPunto? @relation(fields: [idContactoPunto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_ContactoPunto1")
  Distrito        Distrito?      @relation(fields: [idDistrito], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_Distrito1")
  PuntoContacto   PuntoContacto? @relation(fields: [idPuntoContacto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_PuntoContacto1")
  PuntoUbigeo     PuntoUbigeo?   @relation(fields: [idPuntoUbigeo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Fundo_PuntoUbigeo1")
}

model Labor {
  id        Int        @id(map: "PK__Labor__3213E83FB1FE9539") @default(autoincrement())
  nombre    String     @db.VarChar(45)
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  SubLabor  SubLabor[]
}

model LaborVisita {
  id             Int           @id(map: "PK__LaborVis__3213E83F2FDBB342") @default(autoincrement())
  idVisita       Int
  idSubLabor     Int
  idRepresentada Int?
  createdAt      DateTime?     @db.DateTime
  updatedAt      DateTime?     @db.DateTime
  Representada   Representada? @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_LaborVisita_Representada")
  SubLabor       SubLabor      @relation(fields: [idSubLabor], references: [id], onUpdate: NoAction, map: "fk_LaborVisita_SubLabor")
  Visita         Visita        @relation(fields: [idVisita], references: [id], onUpdate: NoAction, map: "fk_LaborVisita_Visita1")
}

model Linea {
  id        Int        @id(map: "PK__Linea__3213E83F7F6745B2")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Linea1")
}

model Negocio {
  id         Int       @id(map: "PK__Negocio__3213E83F6D355A9B") @default(autoincrement())
  nombre     String    @db.VarChar(20)
  idDivision Int
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Division   Division  @relation(fields: [idDivision], references: [id], onUpdate: NoAction, map: "fk_Negocio_Division1")
}

model Provincia {
  id             String       @id(map: "PK__Provinci__3213E83F0535B019") @db.VarChar(4)
  nombre         String       @unique(map: "UQ_nombre_Provincia") @db.VarChar(30)
  idDepartamento String       @db.VarChar(2)
  Distrito       Distrito[]
  Departamento   Departamento @relation(fields: [idDepartamento], references: [id], onUpdate: NoAction, map: "fk_Provincia_Departamento")

  @@index([idDepartamento], map: "idx_idDepartamento_Provincia")
}

model Representada {
  id          Int           @id(map: "PK__Represen__3213E83FA4288CBF")
  nombre      String        @db.VarChar(45)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  LaborVisita LaborVisita[]
  Visita      Visita[]
}

model SubLabor {
  id          Int           @id(map: "PK__SubLabor__3213E83FF7B59071") @default(autoincrement())
  nombre      String        @db.VarChar(45)
  idLabor     Int
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  LaborVisita LaborVisita[]
  Labor       Labor         @relation(fields: [idLabor], references: [id], onUpdate: NoAction, map: "fk_Labor_SubLabor1")
}

model Variedad {
  id           Int        @id(map: "PK__Variedad__3213E83F1398A139") @default(autoincrement())
  nombre       String     @db.VarChar(45)
  idVegetacion Int
  idFoto       Int?
  createdAt    DateTime?  @db.DateTime
  updatedAt    DateTime?  @db.DateTime
  Cultivo      Cultivo[]
  Foto         Foto?      @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Variedad_Foto1")
  Vegetacion   Vegetacion @relation(fields: [idVegetacion], references: [id], onUpdate: NoAction, map: "fk_Variedad_Vegetacion1")
}

model Visita {
  id               Int              @id(map: "PK__Visita__3213E83F2E8B57EE") @default(autoincrement())
  fechaProgramada  DateTime?        @db.DateTime
  inicioProgramado DateTime?        @db.Time
  finProgramado    DateTime?        @db.Time
  duracionP        Decimal?         @db.Decimal(2, 2)
  objetivo         String?          @db.VarChar(255)
  semana           Int?
  estado           String?          @db.VarChar(10)
  numReprog        Int?
  fecVisita        DateTime?        @db.DateTime
  inicioVisita     DateTime?        @db.Time
  finVisita        DateTime?        @db.Time
  duracionV        Decimal?         @db.Decimal(4, 2)
  resultado        String?          @db.VarChar(45)
  aFuturo          String?          @db.VarChar(150)
  detalle          String?          @db.VarChar(255)
  latitud          Decimal?         @db.Decimal(10, 6)
  longitud         Decimal?         @db.Decimal(10, 6)
  idColaborador    Int
  idContacto       Int?
  idCultivo        Int?
  idRepresentada   Int?
  idFoto           Int?
  createdAt        DateTime?        @db.DateTime
  updatedAt        DateTime?        @db.DateTime
  LaborVisita      LaborVisita[]
  Colaborador      Colaborador      @relation(fields: [idColaborador], references: [id], onUpdate: NoAction, map: "fk_Visita_Colaborador1")
  Contacto         Contacto?        @relation(fields: [idContacto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Contacto1")
  Cultivo          Cultivo?         @relation(fields: [idCultivo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Cultivo1")
  Foto             Foto?            @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Foto1")
  Representada     Representada?    @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Representada1")
  VisitaArticulo   VisitaArticulo[]
}

model VisitaArticulo {
  id         Int       @id(map: "PK__VisitaAr__3213E83F085DD9A3") @default(autoincrement())
  idVisita   Int
  idArticulo Int
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Articulo   Articulo  @relation(fields: [idArticulo], references: [id], onUpdate: NoAction, map: "fk_VisitaArticulo_Articulo1")
  Visita     Visita    @relation(fields: [idVisita], references: [id], onUpdate: NoAction, map: "fk_VisitaArticulo_Visita1")
}

model ZonaAnterior {
  id             Int              @id(map: "PK__ZonaAnte__3213E83F5B162B02") @default(autoincrement())
  idEmpresa      Int
  codigo         String           @db.VarChar(4)
  nombre         String           @db.VarChar(80)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  ClienteZonaAnt ClienteZonaAnt[]
  Colaborador    Colaborador[]
}

model Todo {
  id          Int       @id(map: "PK__Todo__3213E83F79DB49CD") @default(autoincrement())
  text        String    @db.VarChar(45)
  completedAt DateTime? @db.DateTime
  createdAt   DateTime? @db.DateTime
  updatedAt   DateTime? @db.DateTime
}

model BlancoBiologico {
  id            Int        @id(map: "PK__BlancoBi__3213E83F277429CD") @default(autoincrement())
  cientifico    String?    @db.VarChar(45)
  estandarizado String?    @db.VarChar(45)
  idVegetacion  Int
  createdAt     DateTime?  @db.DateTime
  updatedAt     DateTime?  @db.DateTime
  Vegetacion    Vegetacion @relation(fields: [idVegetacion], references: [id], onUpdate: NoAction, map: "fk_Blanco_Vegetacion1")
  DemoPlot      DemoPlot[]
}

model DemoPlot {
  id               Int             @id(map: "PK__DemoPlot__3213E83F3870EEAA") @default(autoincrement())
  titulo           String?         @db.VarChar(255)
  objetivo         String?         @db.VarChar(255)
  instalacion      DateTime?       @db.DateTime
  finalizacion     DateTime?       @db.DateTime
  estado           String?         @db.VarChar(11)
  validacion       Boolean?
  idCultivo        Int
  idContactoP      Int
  idBlanco         Int
  idDistrito       String          @db.VarChar(6)
  idGte            Int
  createdAt        DateTime?       @db.DateTime
  updatedAt        DateTime?       @db.DateTime
  resultado        String?         @db.VarChar(15)
  seguimiento      DateTime?       @db.DateTime
  dosis            Decimal?        @db.Decimal(6, 2)
  gradoInfestacion String?         @db.VarChar(5)
  hasCultivo       Decimal?        @db.Decimal(6, 2)
  idFamilia        Int?
  diaCampo         Boolean?
  programacion     DateTime?       @db.DateTime
  BlancoBiologico  BlancoBiologico @relation(fields: [idBlanco], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Blanco1")
  ContactoDelPunto ContactoPunto   @relation(fields: [idContactoP], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_ContactoP1")
  Cultivo          Cultivo         @relation(fields: [idCultivo], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Cultivo1")
  Familia          Familia?        @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_DemoPlot_Familia1")
  Gte              Gte             @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Gte1")
  Distrito         Distrito        @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_DemoPlot_Provincia1")
  FotoDemoPlot     FotoDemoPlot[]
}

model FotoDemoPlot {
  id         Int       @id(map: "PK__FotoDemo__3213E83FFD4DEF13") @default(autoincrement())
  idDemoPlot Int
  tipo       String?   @db.VarChar(10)
  latitud    Decimal?  @db.Decimal(10, 6)
  longitud   Decimal?  @db.Decimal(10, 6)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  rutaFoto   String?   @db.VarChar(255)
  comentario String?   @db.VarChar(255)
  nombre     String?   @db.VarChar(50)
  estado     String?   @db.VarChar(15)
  DemoPlot   DemoPlot  @relation(fields: [idDemoPlot], references: [id], onUpdate: NoAction, map: "fk_Foto_DemoPlot1")
}

model Gte {
  id            Int             @id(map: "PK__Gte__3213E83FC2D6A8E6") @default(autoincrement())
  activo        Boolean?
  idSubZona     Int?
  idColaborador Int?
  idUsuario     Int?
  createdAt     DateTime?       @db.DateTime
  updatedAt     DateTime?       @db.DateTime
  tipo          String?         @db.VarChar(15)
  DemoPlot      DemoPlot[]
  Colaborador   Colaborador?    @relation(fields: [idColaborador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_Colaborador1")
  SubZona       SubZona?        @relation(fields: [idSubZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_SubZona1")
  Usuario       Usuario?        @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Gte_Usuario1")
  PuntoContacto PuntoContacto[]
}

model PuntoContacto {
  id                                              Int             @id(map: "PK__PuntoCon__3213E83F87C955B5") @default(autoincrement())
  nombre                                          String          @db.VarChar(90)
  tipoDoc                                         String?         @db.VarChar(3)
  numDoc                                          String?         @db.VarChar(11)
  hectareas                                       Decimal?        @db.Decimal(6, 2)
  tipo                                            String          @db.VarChar(1)
  dirReferencia                                   String?         @db.VarChar(90)
  lider                                           Boolean?
  activo                                          Boolean
  idGte                                           Int
  createdAt                                       DateTime?       @db.DateTime
  updatedAt                                       DateTime?       @db.DateTime
  idDistrito                                      String?         @db.VarChar(6)
  ContactoPunto                                   ContactoPunto[]
  Fundo                                           Fundo[]
  Distrito                                        Distrito?       @relation(fields: [idDistrito], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntoContacto_Distrito")
  Gte                                             Gte             @relation(fields: [idGte], references: [id], onUpdate: NoAction, map: "fk_PuntoContacto_Gte")
  PuntoTienda_PuntoTienda_idPuntoToPuntoContacto  PuntoTienda[]   @relation("PuntoTienda_idPuntoToPuntoContacto")
  PuntoTienda_PuntoTienda_idTiendaToPuntoContacto PuntoTienda[]   @relation("PuntoTienda_idTiendaToPuntoContacto")
  PuntoUbigeo                                     PuntoUbigeo[]
}

model PuntoTienda {
  id                                                Int           @id(map: "PK__PuntoTie__3213E83FD437B342") @default(autoincrement())
  idPunto                                           Int
  idTienda                                          Int
  createdAt                                         DateTime?     @db.DateTime
  updatedAt                                         DateTime?     @db.DateTime
  PuntoContacto_PuntoTienda_idPuntoToPuntoContacto  PuntoContacto @relation("PuntoTienda_idPuntoToPuntoContacto", fields: [idPunto], references: [id], onUpdate: NoAction, map: "fk_PuntoTienda_Punto")
  PuntoContacto_PuntoTienda_idTiendaToPuntoContacto PuntoContacto @relation("PuntoTienda_idTiendaToPuntoContacto", fields: [idTienda], references: [id], onUpdate: NoAction, map: "fk_PuntoTienda_Tienda")
}

model SubZona {
  id          Int        @id(map: "PK__SubZona__3213E83F9C3A875C") @default(autoincrement())
  codi        String     @db.VarChar(3)
  nombre      String?    @db.VarChar(70)
  createdAt   DateTime?  @db.DateTime
  updatedAt   DateTime?  @db.DateTime
  idSuperZona Int?
  idZona      Int?
  Gte         Gte[]
  SuperZona   SuperZona? @relation(fields: [idSuperZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_SubZona_SuperZona1")
  Zona        Zona?      @relation(fields: [idZona], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_SubZona_Zona1")
}

model Vegetacion {
  id              Int               @id(map: "PK__Vegetaci__3213E83F1223B404") @default(autoincrement())
  nombre          String            @db.VarChar(45)
  updatedAt       DateTime?         @db.DateTime
  createdAt       DateTime?         @db.DateTime
  BlancoBiologico BlancoBiologico[]
  Variedad        Variedad[]
}

model ContactoPunto {
  id            Int           @id(map: "PK__Contacto__3213E83FBBCAE7C7") @default(autoincrement())
  nombre        String        @db.VarChar(45)
  apellido      String        @db.VarChar(45)
  cargo         String        @db.VarChar(20)
  celularA      String?       @db.VarChar(20)
  celularB      String?       @db.VarChar(20)
  idPunto       Int
  createdAt     DateTime?     @db.DateTime
  updatedAt     DateTime?     @db.DateTime
  email         String?       @db.VarChar(30)
  tipo          String?       @db.VarChar(10)
  PuntoContacto PuntoContacto @relation(fields: [idPunto], references: [id], onUpdate: NoAction, map: "fk_Contacto_PuntoContacto")
  DemoPlot      DemoPlot[]
  Fundo         Fundo[]
}

model PuntoUbigeo {
  id            Int           @id(map: "PK__PuntoUbi__3213E83F267A863F") @default(autoincrement())
  idPunto       Int
  idDistrito    String        @db.VarChar(6)
  createdAt     DateTime?     @db.DateTime
  updatedAt     DateTime?     @db.DateTime
  Fundo         Fundo[]
  Distrito      Distrito      @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_PuntoUbigeo_Distrito")
  PuntoContacto PuntoContacto @relation(fields: [idPunto], references: [id], onUpdate: NoAction, map: "fk_PuntoUbigeo_Punto")
}

model ClienteZona {
  id         Int       @id(map: "PK__ClienteZ__3213E83FFE7ED1ED") @default(autoincrement())
  idEmpresa  Int?
  codZona    String    @db.VarChar(4)
  codCliente String    @db.VarChar(20)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Empresa    Empresa?  @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ClienteZona1_Empresa")
}

model SuperZona {
  id        Int       @id(map: "PK__SuperZon__3213E83FA73BDFA1")
  codi      String    @db.VarChar(3)
  nombre    String    @db.VarChar(70)
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  SubZona   SubZona[]
}

model Zona {
  id        Int       @id(map: "PK__Zona__3213E83F432348AD") @default(autoincrement())
  codi      String    @db.VarChar(3)
  nombre    String    @db.VarChar(70)
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  SubZona   SubZona[]
}
