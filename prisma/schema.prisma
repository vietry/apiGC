generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("SQLSERVER_URL")
}

model Foto {
  id        Int        @id(map: "PK__Foto__3213E83F202D2B0E") @default(autoincrement())
  ruta      String     @db.VarChar(50)
  tipo      String?    @db.VarChar(5)
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Usuario   Usuario[]
  Variedad  Variedad[]
  Visita    Visita[]
}

model Usuario {
  id            Int           @id(map: "PK__Usuario__3213E83FE7A17D03") @default(autoincrement())
  nombres       String        @db.VarChar(45)
  apellidos     String?       @db.VarChar(45)
  email         String        @db.VarChar(40)
  emailValidado Boolean
  password      String        @db.VarChar(255)
  rol           String        @db.VarChar(10)
  celular       String?       @db.VarChar(15)
  idFoto        Int?
  createdAt     DateTime?     @db.DateTime
  updatedAt     DateTime?     @db.DateTime
  Colaborador   Colaborador[]
  Foto          Foto?         @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuario_Foto")
}

model Area {
  id          Int           @id(map: "PK__Area__3213E83F559A1BD1") @default(autoincrement())
  nombre      String        @db.VarChar(20)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  Colaborador Colaborador[]
}

model Articulo {
  id             Int              @id(map: "PK__Articulo__3213E83F199F91D5") @default(autoincrement())
  codigo         String           @db.VarChar(10)
  nombre         String           @db.VarChar(90)
  present        Decimal?         @db.Decimal(8, 3)
  codFamilia     String?          @db.VarChar(8)
  codClase       String?          @db.VarChar(6)
  codLinea       String?          @db.VarChar(6)
  codDivision    String?          @db.VarChar(6)
  idFamilia      Int?
  idClase        Int?
  idLinea        Int?
  idDivision     Int?
  idEmpresa      Int
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  Clase          Clase?           @relation(fields: [idClase], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Clase1")
  Division       Division?        @relation(fields: [idDivision], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Division1")
  Empresa        Empresa          @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fkArticulo_Empresa1")
  Familia        Familia?         @relation(fields: [idFamilia], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Familia1")
  Linea          Linea?           @relation(fields: [idLinea], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkArticulo_Linea1")
  VisitaArticulo VisitaArticulo[]
}

model Clase {
  id        Int        @id(map: "PK__Clase__3213E83F418763E5")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Clase1")
}

model Cliente {
  id             Int              @id(map: "PK__Cliente__3213E83FEB84AEF8") @default(autoincrement())
  codigo         String           @db.VarChar(20)
  nombre         String           @db.VarChar(90)
  latitud        Decimal?         @db.Decimal(10, 6)
  longitud       Decimal?         @db.Decimal(10, 6)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  ClienteUbigeo  ClienteUbigeo[]
  ClienteZonaAnt ClienteZonaAnt[]
  Contacto       Contacto[]
}

model ClienteUbigeo {
  id         Int       @id(map: "PK__ClienteU__3213E83FECA8837F") @default(autoincrement())
  idCliente  Int
  idDistrito String    @db.VarChar(6)
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Cliente    Cliente   @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Cliente")
  Distrito   Distrito  @relation(fields: [idDistrito], references: [id], onUpdate: NoAction, map: "fk_ClienteDistrito_Distrito")
  Fundo      Fundo[]
}

model ClienteZonaAnt {
  id           Int          @id(map: "PK__ClienteZ__3213E83F698FB355") @default(autoincrement())
  idEmpresa    Int
  idCliente    Int
  codCliente   String       @db.VarChar(20)
  idZonaAnt    Int
  codZona      String       @db.VarChar(4)
  createdAt    DateTime?    @db.DateTime
  updatedAt    DateTime?    @db.DateTime
  Cliente      Cliente      @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Cliente")
  Empresa      Empresa      @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_Empresa")
  ZonaAnterior ZonaAnterior @relation(fields: [idZonaAnt], references: [id], onUpdate: NoAction, map: "fk_ClienteZonaA_ZonaA")
}

model Colaborador {
  id           Int          @id(map: "PK__Colabora__3213E83FD253B5F2") @default(autoincrement())
  cargo        String?      @db.VarChar(45)
  idArea       Int
  idZonaAnt    Int
  idNegocio    Int
  idUsuario    Int
  createdAt    DateTime?    @db.DateTime
  updatedAt    DateTime?    @db.DateTime
  Negocio      Negocio      @relation(fields: [idNegocio], references: [id], onUpdate: NoAction, map: "fk_Colaborador_Negocio1")
  Usuario      Usuario      @relation(fields: [idUsuario], references: [id], onUpdate: NoAction, map: "fk_Colaborador_Usuario1")
  ZonaAnterior ZonaAnterior @relation(fields: [idZonaAnt], references: [id], onUpdate: NoAction, map: "fk_Colaborador_Zona1")
  Area         Area         @relation(fields: [idArea], references: [id], onUpdate: NoAction, map: "fk_ColaboradorArea")
  Visita       Visita[]
}

model Contacto {
  id        Int       @id(map: "PK__Contacto__3213E83F781F1702") @default(autoincrement())
  nombre    String    @db.VarChar(45)
  apellido  String    @db.VarChar(45)
  cargo     String    @db.VarChar(20)
  correo    String    @db.VarChar(30)
  celularA  String    @db.VarChar(20)
  celularB  String?   @db.VarChar(20)
  idCliente Int
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  Cliente   Cliente   @relation(fields: [idCliente], references: [id], onUpdate: NoAction, map: "fk_Contacto_Cliente")
  Visita    Visita[]
}

model Cultivo {
  id            Int       @id(map: "PK__Cultivo__3213E83FF67F055F") @default(autoincrement())
  certificacion String?   @db.VarChar(20)
  area          Decimal?  @db.Decimal(4, 2)
  mesInicio     String?   @db.VarChar(20)
  mesFinal      String?   @db.VarChar(20)
  observacion   String?   @db.VarChar(255)
  idFundo       Int
  idVariedad    Int
  createdAt     DateTime? @db.DateTime
  updatedAt     DateTime? @db.DateTime
  Fundo         Fundo     @relation(fields: [idFundo], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Fundo1")
  Variedad      Variedad  @relation(fields: [idVariedad], references: [id], onUpdate: NoAction, map: "fk_Cultivo_Variedad1")
  Visita        Visita[]
}

model Departamento {
  id        String      @id(map: "PK__Departam__3213E83FC48230C5") @db.VarChar(2)
  nombre    String      @unique(map: "UQ_nombre_Departamento") @db.VarChar(30)
  Provincia Provincia[]

  @@index([nombre], map: "idx_nombre_Departamento")
}

model Distrito {
  id             String          @id(map: "PK__Distrito__3213E83F47F24E94") @db.VarChar(6)
  nombre         String          @db.VarChar(40)
  idProvincia    String          @db.VarChar(4)
  idDepartamento String          @db.VarChar(2)
  ClienteUbigeo  ClienteUbigeo[]
  Provincia      Provincia       @relation(fields: [idProvincia], references: [id], onUpdate: NoAction, map: "FK_Distrito_Provincia")
}

model Division {
  id        Int        @id(map: "PK__Division__3213E83FA86B4635")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(30)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Division1")
  Negocio   Negocio[]
}

model Empresa {
  id             Int              @id(map: "PK__Empresa__3213E83F03AB4AC0")
  nomEmpresa     String           @db.VarChar(15)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  Articulo       Articulo[]
  Clase          Clase[]
  ClienteZonaAnt ClienteZonaAnt[]
  Division       Division[]
  Familia        Familia[]
  Linea          Linea[]
  ZonaAnterior   ZonaAnterior[]
}

model Familia {
  id        Int        @id(map: "PK__Familia__3213E83F13213D92")
  codigo    String     @db.VarChar(7)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Familia1")
}

model Fundo {
  id              Int           @id(map: "PK__Fundo__3213E83FB0AFEA20") @default(autoincrement())
  nombre          String?       @db.VarChar(45)
  idClienteUbigeo Int
  createdAt       DateTime?     @db.DateTime
  updatedAt       DateTime?     @db.DateTime
  Cultivo         Cultivo[]
  ClienteUbigeo   ClienteUbigeo @relation(fields: [idClienteUbigeo], references: [id], onUpdate: NoAction, map: "fk_Fundo_ClienteUbigeo")
}

model Labor {
  id        Int        @id(map: "PK__Labor__3213E83F31F197F4") @default(autoincrement())
  nombre    String     @db.VarChar(45)
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  SubLabor  SubLabor[]
}

model LaborVisita {
  id             Int           @id(map: "PK__LaborVis__3213E83FA8E80F06") @default(autoincrement())
  idVisita       Int
  idSubLabor     Int
  idRepresentada Int?
  createdAt      DateTime?     @db.DateTime
  updatedAt      DateTime?     @db.DateTime
  Representada   Representada? @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_LaborVisita_Representada")
  SubLabor       SubLabor      @relation(fields: [idSubLabor], references: [id], onUpdate: NoAction, map: "fk_LaborVisita_SubLabor")
  Visita         Visita        @relation(fields: [idVisita], references: [id], onUpdate: NoAction, map: "fk_LaborVisita_Visita1")
}

model Linea {
  id        Int        @id(map: "PK__Linea__3213E83FA15AC581")
  codigo    String     @db.VarChar(6)
  nombre    String     @db.VarChar(60)
  idEmpresa Int
  createdAt DateTime?  @db.DateTime
  updatedAt DateTime?  @db.DateTime
  Articulo  Articulo[]
  Empresa   Empresa    @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Empresa_Linea1")
}

model Negocio {
  id          Int           @id(map: "PK__Negocio__3213E83FB903AC60") @default(autoincrement())
  nombre      String        @db.VarChar(20)
  idDivision  Int
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  Colaborador Colaborador[]
  Division    Division      @relation(fields: [idDivision], references: [id], onUpdate: NoAction, map: "fk_Negocio_Division1")
}

model Planta {
  id        Int        @id(map: "PK__Planta__3213E83F1F73FFB1") @default(autoincrement())
  nombre    String     @db.VarChar(45)
  updatedAt DateTime?  @db.DateTime
  createdAt DateTime?  @db.DateTime
  Variedad  Variedad[]
}

model Provincia {
  id             String       @id(map: "PK__Provinci__3213E83F200AA1DB") @db.VarChar(4)
  nombre         String       @unique(map: "UQ_nombre_Provincia") @db.VarChar(30)
  idDepartamento String       @db.VarChar(2)
  Distrito       Distrito[]
  Departamento   Departamento @relation(fields: [idDepartamento], references: [id], onUpdate: NoAction, map: "fk_Provincia_Departamento")

  @@index([idDepartamento], map: "idx_idDepartamento_Provincia")
}

model Representada {
  id          Int           @id(map: "PK__Represen__3213E83FCDD5725A")
  nombre      String        @db.VarChar(45)
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  LaborVisita LaborVisita[]
  Visita      Visita[]
}

model SubLabor {
  id          Int           @id(map: "PK__SubLabor__3213E83F0378FF6C") @default(autoincrement())
  nombre      String        @db.VarChar(45)
  idLabor     Int
  createdAt   DateTime?     @db.DateTime
  updatedAt   DateTime?     @db.DateTime
  LaborVisita LaborVisita[]
  Labor       Labor         @relation(fields: [idLabor], references: [id], onUpdate: NoAction, map: "fk_Labor_SubLabor1")
}

model Variedad {
  id        Int       @id(map: "PK__Variedad__3213E83F5555687D") @default(autoincrement())
  nombre    String    @db.VarChar(45)
  idPlanta  Int
  idFoto    Int?
  createdAt DateTime? @db.DateTime
  updatedAt DateTime? @db.DateTime
  Cultivo   Cultivo[]
  Foto      Foto?     @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Variedad_Foto1")
  Planta    Planta    @relation(fields: [idPlanta], references: [id], onUpdate: NoAction, map: "fk_Variedad_Planta1")
}

model Visita {
  id               Int              @id(map: "PK__Visita__3213E83F77D895CF") @default(autoincrement())
  fechaProgramada  DateTime?        @db.DateTime
  inicioProgramado DateTime?        @db.Time
  finProgramado    DateTime?        @db.Time
  duracionP        Decimal?         @db.Decimal(2, 2)
  objetivo         String?          @db.VarChar(255)
  semana           Int?
  estado           String?          @db.VarChar(10)
  numReprog        Int?
  fecVisita        DateTime?        @db.DateTime
  inicioVisita     DateTime?        @db.Time
  finVisita        DateTime?        @db.Time
  duracionV        Decimal?         @db.Decimal(4, 2)
  resultado        String?          @db.VarChar(45)
  aFuturo          String?          @db.VarChar(150)
  detalle          String?          @db.VarChar(255)
  latitud          Decimal?         @db.Decimal(10, 6)
  longitud         Decimal?         @db.Decimal(10, 6)
  idColaborador    Int
  idContacto       Int?
  idCultivo        Int?
  idRepresentada   Int?
  idFoto           Int?
  createdAt        DateTime?        @db.DateTime
  updatedAt        DateTime?        @db.DateTime
  LaborVisita      LaborVisita[]
  Colaborador      Colaborador      @relation(fields: [idColaborador], references: [id], onUpdate: NoAction, map: "fk_Visita_Colaborador1")
  Contacto         Contacto?        @relation(fields: [idContacto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Contacto1")
  Cultivo          Cultivo?         @relation(fields: [idCultivo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Cultivo1")
  Foto             Foto?            @relation(fields: [idFoto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Foto1")
  Representada     Representada?    @relation(fields: [idRepresentada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Visita_Representada1")
  VisitaArticulo   VisitaArticulo[]
}

model VisitaArticulo {
  id         Int       @id(map: "PK__VisitaAr__3213E83FD7847FCC") @default(autoincrement())
  idVisita   Int
  idArticulo Int
  createdAt  DateTime? @db.DateTime
  updatedAt  DateTime? @db.DateTime
  Articulo   Articulo  @relation(fields: [idArticulo], references: [id], onUpdate: NoAction, map: "fk_VisitaArticulo_Articulo1")
  Visita     Visita    @relation(fields: [idVisita], references: [id], onUpdate: NoAction, map: "fk_VisitaArticulo_Visita1")
}

model ZonaAnterior {
  id             Int              @id(map: "PK__ZonaAnte__3213E83FA8B22675")
  idEmpresa      Int
  codigo         String           @db.VarChar(4)
  nombre         String           @db.VarChar(45)
  zonaA          String           @db.VarChar(45)
  zonaB          String?          @db.VarChar(20)
  createdAt      DateTime?        @db.DateTime
  updatedAt      DateTime?        @db.DateTime
  ClienteZonaAnt ClienteZonaAnt[]
  Colaborador    Colaborador[]
  Empresa        Empresa          @relation(fields: [idEmpresa], references: [id], onUpdate: NoAction, map: "fk_Zona_Empresa1")
}

model Todo {
  id          Int       @id(map: "PK__Todo__3213E83F6A125941") @default(autoincrement())
  text        String    @db.VarChar(45)
  completedAt DateTime? @db.DateTime
  createdAt   DateTime? @db.DateTime
  updatedAt   DateTime? @db.DateTime
}
